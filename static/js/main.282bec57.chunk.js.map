{"version":3,"sources":["Images/clock.gif","Images/emptyCart.png","Components/OutputComp.js","Components/InputComp.js","App.js","reportWebVitals.js","index.js"],"names":["OutputComp","id","itemName","itemAmt","time","updateExpense","deleteExpense","className","onClick","style","padding","margin","backgroundColor","color","icon","faEdit","marginLeft","display","flexDirection","alignItems","faRupeeSign","fontSize","faTrashAlt","toast","configure","InputComp","useState","flag","total","setTotal","expenseItem","setExpenseItem","expenseAmount","setExpenseAmount","expenseList","setExpenseList","isEdit","setEdit","setId","d","Date","useEffect","getTotal","reduce","acc","item","Number","editExpense","find","deleteExpenseIndex","findIndex","window","confirm","tempExpenseArray","slice","splice","warning","autoClose","submitHandler","e","a","preventDefault","tempExpenseList","map","info","position","POSITION","BOTTOM_CENTER","setTimeout","tempExpense","uuid","toLocaleTimeString","success","error","TOP_CENTER","src","clock","onSubmit","required","onChange","target","value","type","placeholder","faTag","faWrench","faCheck","length","currentItem","emptyCart","alt","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.282bec57.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clock.ed2439aa.gif\";","export default __webpack_public_path__ + \"static/media/emptyCart.8e6c22cc.png\";","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrashAlt,\n  faRupeeSign,\n  faEdit,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst OutputComp = ({\n  id,\n  itemName,\n  itemAmt,\n  time,\n  updateExpense,\n  deleteExpense,\n}) => {\n  return (\n    <>\n      <div className=\"expenseItem\">\n        <div>\n          <button\n            className=\"group-button\"\n            onClick={() => updateExpense(id)}\n            style={{\n              padding: 0,\n              margin: 0,\n              backgroundColor: \"white\",\n            }}\n          >\n            <FontAwesomeIcon\n              style={{ color: \"blue\" }}\n              icon={faEdit}\n            ></FontAwesomeIcon>\n          </button>\n          <div\n            style={{\n              marginLeft: \"1rem\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"self-start\",\n            }}\n          >\n            <p style={{ margin: \"0\" }}>{itemName}</p>\n            <small>{time}</small>\n          </div>\n        </div>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <small>\n            {itemAmt} <FontAwesomeIcon icon={faRupeeSign}></FontAwesomeIcon>\n          </small>\n          <button\n            className=\"group-button\"\n            onClick={() => deleteExpense(id)}\n            style={{\n              backgroundColor: \"red\",\n              padding: \"0\",\n              margin: \"0\",\n              fontSize: \"larger\",\n            }}\n          >\n            <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OutputComp;\n","import React, { useEffect, useState } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { FaGithub, FaTwitter, FaLinkedin } from \"react-icons/fa\";\nimport {\n  faRupeeSign,\n  faTag,\n  faCheck,\n  faWrench,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport clock from \"../Images/clock.gif\";\nimport emptyCart from \"../Images/emptyCart.png\";\nimport OutputComp from \"./OutputComp\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\nconst InputComp = () => {\n  let [flag, setFlag] = useState(false);\n  let [total, setTotal] = useState(\"\");\n  let [expenseItem, setExpenseItem] = useState(\"\");\n  let [expenseAmount, setExpenseAmount] = useState(\"\");\n  let [expenseList, setExpenseList] = useState([]);\n  let [isEdit, setEdit] = useState(false);\n  let [id, setId] = useState(0);\n  let d = new Date();\n\n  useEffect(() => {\n    getTotal();\n  }, [expenseList]);\n\n  const getTotal = () => {\n    setTotal(\n      expenseList.reduce((acc, item) => {\n        return (acc += Number(item.expenseAmount));\n      }, 0)\n    );\n  };\n\n  const updateExpense = (id) => {\n    let editExpense = expenseList.find((item) => item.id === id);\n    let { expenseItem, expenseAmount } = editExpense;\n    setExpenseItem(expenseItem);\n    setExpenseAmount(expenseAmount);\n    setEdit(true);\n    setId(id);\n  };\n\n  const deleteExpense = (id) => {\n    let deleteExpense = expenseList.find((item) => item.id === id);\n    let deleteExpenseIndex = expenseList.findIndex(\n      (item) => item.id === deleteExpense.id\n    );\n    let isDelete = window.confirm(\n      `Are you sure you want to delete ${deleteExpense.expenseItem}`\n    );\n    if (isDelete) {\n      let tempExpenseArray = expenseList.slice();\n      tempExpenseArray.splice(deleteExpenseIndex, 1);\n      setExpenseList(tempExpenseArray);\n      toast.warning(`${deleteExpense.expenseItem} deleted Successfully.`, {\n        autoClose: 2000,\n      });\n      if (\n        expenseAmount === deleteExpense.expenseAmount ||\n        expenseItem === deleteExpense.expenseItem\n      ) {\n        setExpenseAmount(\"\");\n        setExpenseItem(\"\");\n        setEdit(false);\n      }\n    }\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (expenseAmount > 0) {\n      if (isEdit) {\n        let tempExpenseList = expenseList.map((item) => {\n          return item.id === id\n            ? { ...item, expenseItem, expenseAmount }\n            : item;\n        });\n        setExpenseList(tempExpenseList);\n        setEdit(false);\n        toast.info(`${expenseItem} expense updated successfully`, {\n          position: toast.POSITION.BOTTOM_CENTER,\n          autoClose: 2000,\n        });\n      } else {\n        setTimeout(() => {\n          let tempExpense = {\n            id: uuid(),\n            expenseAmount: Number(expenseAmount),\n            expenseItem,\n            time: d.toLocaleTimeString(),\n          };\n          setExpenseList([...expenseList, tempExpense]);\n          toast.success(\n            `${tempExpense.expenseItem} expense added successfully`,\n            {\n              position: toast.POSITION.BOTTOM_CENTER,\n              autoClose: 2000,\n            }\n          );\n        }, 1000);\n      }\n    } else {\n      toast.error(\"Price should be greater than 0\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 1500,\n      });\n    }\n    setExpenseItem(\"\");\n    setExpenseAmount(\"\");\n  };\n\n  return (\n    <div className=\"main\">\n      <header>\n        <p>Expense Tracker App</p>\n      </header>\n      <div className=\"main-container\">\n        <img\n          style={{ display: flag ? \"block\" : \"none\", margin: \"1rem auto\" }}\n          src={clock}\n        />\n        <div className=\"inputDiv\">\n          {total > 0 ? (\n            <h3>\n              Total Spending : <span style={{ color: \"red\" }}>{total}</span>\n            </h3>\n          ) : null}\n          <form onSubmit={submitHandler}>\n            <div className=\"both\">\n              <input\n                required\n                onChange={(e) => setExpenseAmount(e.target.value)}\n                value={expenseAmount}\n                type=\"number\"\n                placeholder=\"e.g 650\"\n                id=\"expenseAmount\"\n              />\n              <div>\n                <FontAwesomeIcon icon={faRupeeSign}></FontAwesomeIcon>\n              </div>\n            </div>\n            <div className=\"both\">\n              <input\n                required\n                placeholder=\"Shoes\"\n                onChange={(e) => setExpenseItem(e.target.value)}\n                value={expenseItem}\n                type=\"text\"\n                id=\"expenseDesc\"\n              />\n              <div>\n                <FontAwesomeIcon icon={faTag}></FontAwesomeIcon>\n              </div>\n            </div>\n            <button className=\"group-button\" type=\"submit\">\n              {isEdit ? (\n                <FontAwesomeIcon icon={faWrench}></FontAwesomeIcon>\n              ) : (\n                <FontAwesomeIcon icon={faCheck}></FontAwesomeIcon>\n              )}\n            </button>\n          </form>\n        </div>\n        {expenseList.length > 0 ? (\n          expenseList.map((currentItem) => {\n            return (\n              <OutputComp\n                key={currentItem.id}\n                id={currentItem.id}\n                itemName={currentItem.expenseItem}\n                itemAmt={currentItem.expenseAmount}\n                time={currentItem.time}\n                deleteExpense={deleteExpense}\n                updateExpense={updateExpense}\n              />\n            );\n          })\n        ) : (\n          <div className=\"empty-list\">\n            <p>Empty List</p>\n            <img src={emptyCart} alt=\"no preview available\" />\n          </div>\n        )}\n      </div>\n      <footer>\n        <p>Say Hi 👋</p>\n        <ul>\n          <li>\n            <a href=\"https://github.com/gopalbbharadva\" target=\"_blank\">\n              <FaGithub />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://twitter.com/Gopal_33_gb\" target=\"_blank\">\n              <FaTwitter />\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://www.linkedin.com/in/gopal-bharadva-1aa880176/\"\n              target=\"_blank\"\n            >\n              <FaLinkedin />\n            </a>\n          </li>\n        </ul>\n      </footer>\n      {/* expense model */}\n\n      {/* {selectExpense && ( \n      <div\n        className=\"main-model\"\n        onClick={checkClick}\n        style={{\n          display: show ? \"block\" : \"none\",\n        }}\n      >\n        <div className=\"model-container\">\n          <div className=\"model\">\n            <input\n              type=\"number\"\n              onChange={(e) => setAmount(e.target.value)}\n              value={amt}\n            />\n            <input\n              onChange={(e) => setItem(e.target.value)}\n              type=\"text\"\n              value={item}\n            />\n            <button>Update</button>\n          </div>\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default InputComp;\n","import \"./App.css\";\nimport InputComp from \"./Components/InputComp\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <InputComp/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}