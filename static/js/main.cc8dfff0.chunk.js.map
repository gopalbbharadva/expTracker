{"version":3,"sources":["config.js","Components/OutputComp.js","Components/InputComp.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestoreRef","firestore","OutputComp","id","itemName","itemAmt","date","className","style","display","flexDirection","alignItems","margin","toDate","toDateString","icon","faRupeeSign","onClick","window","confirm","collection","doc","delete","backgroundColor","padding","fontSize","faTrashAlt","InputComp","useState","total","setTotal","item","setItem","amt","setAmount","itemList","setItemList","useEffect","getItems","onSnapshot","snap","docs","map","data","itemAmount","createdAt","onChange","e","target","value","defaultValue","type","placeholder","faTag","cursor","add","FieldValue","serverTimestamp","parseInt","alert","faCheck","currentItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc8dfff0.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAgPZCyMlIuQomaxxfWsJcGGSCzWpiLsAQ\",\n    authDomain: \"expensetracker-8ba6c.firebaseapp.com\",\n    projectId: \"expensetracker-8ba6c\",\n    storageBucket: \"expensetracker-8ba6c.appspot.com\",\n    messagingSenderId: \"124015567178\",\n    appId: \"1:124015567178:web:58005032f6c930b199e1b3\",\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  const firestoreRef=firebase.firestore();\n\n  export {firestoreRef};\n  ","import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faRupeeSign } from \"@fortawesome/free-solid-svg-icons\";\nimport { firestoreRef } from \"../config\";\n\nconst OutputComp = ({ id, itemName, itemAmt, date }) => {\n//   let [total, setTotal] = useState(0);\n\n//   useEffect(() => {\n//     total =total+itemAmt;\n//     setTotal(total);\n//     console.log(total)\n//   }, [itemAmt]);\n\n  const deleteItem = () => {\n    const isDelete = window.confirm(`are you sure u want to delete ${itemAmt}`);\n    if (isDelete) {\n      firestoreRef.collection(\"expenses\").doc(id).delete();\n    }\n  };\n  if (date) {\n    return (\n      <div className=\"expenseItem\">\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"self-start\",\n          }}\n        >\n          <p style={{ margin: \"0\" }}>{itemName}</p>\n          <small>{date.toDate().toDateString()}</small>\n          {/* <small>{total}</small> */}\n        </div>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <small>\n            {itemAmt} <FontAwesomeIcon icon={faRupeeSign}></FontAwesomeIcon>\n          </small>\n          <button\n            onClick={deleteItem}\n            style={{\n              backgroundColor: \"red\",\n              padding: \"0\",\n              margin: \"0\",\n              fontSize: \"larger\",\n            }}\n          >\n            <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\n          </button>\n        </div>\n      </div>\n    );\n  } else return <div></div>;\n};\n\nexport default OutputComp;\n","import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faRupeeSign,\n  faTag,\n  faAngleDoubleRight,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { firestoreRef } from \"../config\";\nimport firebase from \"firebase\";\nimport OutputComp from \"./OutputComp\";\n\nconst InputComp = () => {\n  let [total, setTotal] = useState(0);\n  let [item, setItem] = useState('');\n  let [amt, setAmount] = useState('');\n  const [itemList, setItemList] = useState([]);\n\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  const getItems = () => {\n    firestoreRef.collection(\"expenses\").onSnapshot(function (snap) {\n      setItemList(\n        snap.docs.map((item) => ({\n          id: item.id,\n          item: item.data().item,\n          itemAmount: item.data().itemAmount,\n          date: item.data().createdAt,\n        }))\n      );\n    });\n  };\n  const submitHandler = () => {\n    if (item && amt) {\n      firestoreRef.collection(\"expenses\").add({\n        item: item,\n        itemAmount: amt,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n      total += parseInt(amt);\n      setTotal(total);\n      setAmount(\"\");\n      setItem(\"\");\n    } else alert(\"Plz enter item data\");\n  };\n\n  // const formHandler=()=>{\n\n  // }\n  // const getTotal = () => {\n  //   itemList.map((item) => {\n  //     console.log(item.itemAmount)\n  //     total += parseInt(item.itemAmount);\n  //     // console.log(item);\n  //   });\n  //   setTotal(total);\n  //   console.log(total);\n  // };\n  const itemHandler = (e) => {\n    item = e.target.value;\n    if (item) setItem(item);\n  };\n  const itemAmtHandler = (e) => {\n    amt = e.target.value;\n    if (amt) setAmount(amt);\n  };\n  return (\n    <div>\n      <header>\n        <p style={{ margin: 0, fontSize: \"larger\" }}>Expense Tracker App</p>\n      </header>\n      <div className=\"inputDiv\">\n        <h3>{`Total:${total}`}</h3>\n        <form>\n          <div className=\"inputDiv-amt\">\n            <input\n              onChange={itemAmtHandler}\n              defaultValue={amt}\n              style={{ fontSize: \"1rem\" }}\n              type=\"number\"\n              placeholder=\"What's Amount?\"\n              id=\"expenseAmount\"\n            />\n            <div>\n              <FontAwesomeIcon icon={faRupeeSign}></FontAwesomeIcon>\n            </div>\n          </div>\n          <div className=\"inputDiv-amt\">\n            <input\n              onChange={itemHandler}\n              defaultValue={item}\n              type=\"text\"\n              style={{ fontSize: \"1rem\" }}\n              placeholder=\"Which expense\"\n              id=\"expenseDesc\"\n            />\n            <div>\n              <FontAwesomeIcon icon={faTag}></FontAwesomeIcon>\n            </div>\n          </div>\n        </form>\n        <button\n          style={{ cursor: \"pointer\" }}\n          // disabled={flag}\n          onClick={submitHandler}\n        >\n          <FontAwesomeIcon icon={faCheck}></FontAwesomeIcon>\n        </button>\n      </div>\n      {itemList.map((currentItem) => {\n        return (\n          <OutputComp\n            key={currentItem.id}\n            id={currentItem.id}\n            itemName={currentItem.item}\n            itemAmt={currentItem.itemAmount}\n            date={currentItem.date}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default InputComp;\n","import \"./App.css\";\nimport InputComp from \"./Components/InputComp\";\n\nimport { firestoreRef } from \"./config\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <InputComp/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}