{"version":3,"sources":["Images/clock.gif","Components/OutputComp.js","Components/InputComp.js","App.js","reportWebVitals.js","index.js"],"names":["OutputComp","id","itemName","itemAmt","updateExpense","className","onClick","style","padding","margin","backgroundColor","color","icon","faEdit","marginLeft","display","flexDirection","alignItems","faRupeeSign","fontSize","faTrashAlt","InputComp","useState","flag","setFlag","total","expenseItem","setExpenseItem","expenseAmount","setExpenseAmount","uuid","expenseList","setExpenseList","isEdit","setEdit","setId","tempExpense","find","item","submitHandler","e","a","preventDefault","length","console","log","tempExpenseList","map","setTimeout","alert","src","clock","onSubmit","onChange","target","value","type","placeholder","faTag","cursor","faWrench","faCheck","currentItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61928ab5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clock.ed2439aa.gif\";","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrashAlt,\n  faRupeeSign,\n  faEdit,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst OutputComp = ({ id, itemName, itemAmt, updateExpense }) => {\n  const deleteItem = () => {};\n  return (\n    <>\n      <div className=\"expenseItem\">\n        <div>\n          <button\n            onClick={() => updateExpense(id)}\n            style={{\n              padding: 0,\n              margin: 0,\n              backgroundColor: \"white\",\n            }}\n          >\n            <FontAwesomeIcon\n              style={{ color: \"blue\" }}\n              icon={faEdit}\n            ></FontAwesomeIcon>\n          </button>\n          <div\n            style={{\n              marginLeft: \"1rem\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"self-start\",\n            }}\n          >\n            <p style={{ margin: \"0\" }}>{itemName}</p>\n            {/* <small>{date.toDate().toDateString()}</small> */}\n          </div>\n        </div>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <small>\n            {itemAmt} <FontAwesomeIcon icon={faRupeeSign}></FontAwesomeIcon>\n          </small>\n          <button\n            onClick={deleteItem}\n            style={{\n              backgroundColor: \"red\",\n              padding: \"0\",\n              margin: \"0\",\n              fontSize: \"larger\",\n            }}\n          >\n            <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OutputComp;\n","import React, { useEffect, useState } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faRupeeSign,\n  faTag,\n  faCheck,\n  faWrench,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport clock from \"../Images/clock.gif\";\nimport OutputComp from \"./OutputComp\";\n\nconst InputComp = () => {\n  let [flag, setFlag] = useState(false);\n  let [total, setTotal] = useState(0);\n  let [expenseItem, setExpenseItem] = useState(\"\");\n  let [expenseAmount, setExpenseAmount] = useState(\"\");\n  let [expenseList, setExpenseList] = useState([\n    {\n      id: uuid(),\n      expenseItem: \"shoes\",\n      expenseAmount: 350,\n    },\n  ]);\n  let [isEdit, setEdit] = useState(false);\n  let [id, setId] = useState(0);\n\n  const getTotal = async () => {\n    await setTotal(\n      expenseList.reduce((acc, item) => {\n        return (acc += parseInt(item.amt));\n      }, 0)\n    );\n  };\n\n  const updateExpense = (id) => {\n    let tempExpense = expenseList.find((item) => item.id === id);\n    let { expenseItem, expenseAmount } = tempExpense;\n    setExpenseItem(expenseItem);\n    setExpenseAmount(expenseAmount);\n    setEdit(true);\n    setId(id);\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (expenseItem.length > 0 && expenseAmount !== 0) {\n      console.log(flag);\n      if (isEdit) {\n        let tempExpenseList = expenseList.map((item) => {\n          return item.id === id\n            ? { ...item, expenseItem, expenseAmount }\n            : item;\n        });\n        setExpenseList(tempExpenseList);\n        setEdit(false);\n      } else {\n        flag = true;\n        setFlag(flag);\n\n        console.log(\"else\");\n        setTimeout(() => {\n          let tempExpense = { id: uuid(), expenseAmount, expenseItem };\n          setExpenseList([...expenseList, tempExpense]);\n        }, 1500);\n      }\n      flag = false;\n      setFlag(flag);\n      console.log(flag);\n\n      setExpenseAmount(\"\");\n      setExpenseItem(\"\");\n    } else alert(\"Plz enter item data\");\n  };\n\n  return (\n    <div className=\"main\">\n      <header>\n        <p style={{ margin: 0, fontSize: \"larger\" }}>Expense Tracker App</p>\n      </header>\n      <img\n        style={{ display: flag ? \"block\" : \"none\", margin: \"1rem auto\" }}\n        src={clock}\n      />\n      <div className=\"inputDiv\">\n        {total > 0 ? (\n          <h3>\n            Bill : <span style={{ color: \"red\" }}>{total}</span>\n          </h3>\n        ) : (\n          <h3>No expenses</h3>\n        )}\n        <form onSubmit={submitHandler}>\n          <div className=\"both\">\n            <input\n              onChange={(e) => setExpenseAmount(e.target.value)}\n              value={expenseAmount}\n              type=\"number\"\n              placeholder=\"What's Amount?\"\n              id=\"expenseAmount\"\n            />\n            <div>\n              <FontAwesomeIcon icon={faRupeeSign}></FontAwesomeIcon>\n            </div>\n          </div>\n          <div className=\"both\">\n            <input\n              placeholder=\"which expense\"\n              onChange={(e) => setExpenseItem(e.target.value)}\n              value={expenseItem}\n              type=\"text\"\n              id=\"expenseDesc\"\n            />\n            <div>\n              <FontAwesomeIcon icon={faTag}></FontAwesomeIcon>\n            </div>\n          </div>\n          <button type=\"submit\" style={{ cursor: \"pointer\" }}>\n            {isEdit ? (\n              <FontAwesomeIcon icon={faWrench}></FontAwesomeIcon>\n            ) : (\n              <FontAwesomeIcon icon={faCheck}></FontAwesomeIcon>\n            )}\n          </button>\n        </form>\n      </div>\n      {expenseList.map((currentItem) => {\n        return (\n          <OutputComp\n            key={currentItem.id}\n            id={currentItem.id}\n            itemName={currentItem.expenseItem}\n            itemAmt={currentItem.expenseAmount}\n            // date={currentItem.date}\n            updateExpense={updateExpense}\n          />\n        );\n      })}\n\n      {/* expense model */}\n\n      {/* {selectExpense && ( \n      <div\n        className=\"main-model\"\n        onClick={checkClick}\n        style={{\n          display: show ? \"block\" : \"none\",\n        }}\n      >\n        <div className=\"model-container\">\n          <div className=\"model\">\n            <input\n              type=\"number\"\n              onChange={(e) => setAmount(e.target.value)}\n              value={amt}\n            />\n            <input\n              onChange={(e) => setItem(e.target.value)}\n              type=\"text\"\n              value={item}\n            />\n            <button>Update</button>\n          </div>\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default InputComp;\n","import \"./App.css\";\nimport InputComp from \"./Components/InputComp\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <InputComp/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}