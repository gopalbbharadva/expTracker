{"version":3,"sources":["config.js","Components/OutputComp.js","Components/InputComp.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestoreRef","firestore","OutputComp","id","itemName","itemAmt","date","className","style","display","flexDirection","alignItems","margin","toDate","toDateString","icon","faRupeeSign","onClick","window","confirm","collection","doc","delete","backgroundColor","padding","fontSize","faTrashAlt","InputComp","useState","total","setTotal","item","setItem","amt","setAmount","itemList","setItemList","useEffect","getItems","getTotal","a","reduce","acc","parseInt","itemAmount","onSnapshot","snap","docs","map","data","createdAt","submitHandler","e","preventDefault","length","add","FieldValue","serverTimestamp","alert","onSubmit","onChange","target","value","type","placeholder","faTag","cursor","faCheck","currentItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd6ae26a.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAgPZCyMlIuQomaxxfWsJcGGSCzWpiLsAQ\",\n    authDomain: \"expensetracker-8ba6c.firebaseapp.com\",\n    projectId: \"expensetracker-8ba6c\",\n    storageBucket: \"expensetracker-8ba6c.appspot.com\",\n    messagingSenderId: \"124015567178\",\n    appId: \"1:124015567178:web:58005032f6c930b199e1b3\",\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  const firestoreRef=firebase.firestore();\n\n  export {firestoreRef};\n  ","import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faRupeeSign } from \"@fortawesome/free-solid-svg-icons\";\nimport { firestoreRef } from \"../config\";\n\nconst OutputComp = ({ id, itemName, itemAmt, date }) => {\n  \n\n  const deleteItem = () => {\n    const isDelete = window.confirm(`are you sure u want to delete ${itemAmt}`);\n    if (isDelete) {\n      firestoreRef.collection(\"expenses\").doc(id).delete();\n    }\n  };\n  if (date) {\n    return (\n      <div className=\"expenseItem\">\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"self-start\",\n          }}\n        >\n          <p style={{ margin: \"0\" }}>{itemName}</p>\n          <small>{date.toDate().toDateString()}</small>\n          {/* <small>{total}</small> */}\n        </div>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <small>\n            {itemAmt} <FontAwesomeIcon icon={faRupeeSign}></FontAwesomeIcon>\n          </small>\n          <button\n            onClick={deleteItem}\n            style={{\n              backgroundColor: \"red\",\n              padding: \"0\",\n              margin: \"0\",\n              fontSize: \"larger\",\n            }}\n          >\n            <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\n          </button>\n        </div>\n      </div>\n    );\n  } else return <div></div>;\n};\n\nexport default OutputComp;\n","import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRupeeSign, faTag, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { firestoreRef } from \"../config\";\nimport firebase from \"firebase\";\nimport OutputComp from \"./OutputComp\";\n\nconst InputComp = () => {\n  let [total, setTotal] = useState(0);\n  let [item, setItem] = useState(\"\");\n  let [amt, setAmount] = useState(\"\");\n  const [itemList, setItemList] = useState([]);\n\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  useEffect(() => {\n    getTotal();\n  }, [itemList]);\n\n  const getTotal = async () => {\n    await setTotal(\n      itemList.reduce((acc, item) => {\n        return (acc += parseInt(item.itemAmount));\n      }, 0)\n    );\n  };\n\n  const getItems = () => {\n    firestoreRef.collection(\"expenses\").onSnapshot(function (snap) {\n      setItemList(\n        snap.docs.map((item) => ({\n          id: item.id,\n          item: item.data().item,\n          itemAmount: item.data().itemAmount,\n          date: item.data().createdAt,\n        }))\n      );\n    });\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (item.length > 0 && amt !== 0) {\n      await firestoreRef.collection(\"expenses\").add({\n        item: item,\n        itemAmount: amt,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n      setAmount(\" \");\n      setItem(\" \");\n    } else alert(\"Plz enter item data\");\n  };\n\n  return (\n    <div>\n      <header>\n        <p style={{ margin: 0, fontSize: \"larger\" }}>Expense Tracker App</p>\n      </header>\n      <div className=\"inputDiv\">\n        {total > 0? <h3>{`Total:${total}`}</h3>: <h3>No expenses</h3>}\n        <form onSubmit={submitHandler}>\n          <div className=\"both\">\n            <input\n              onChange={(e) => setAmount(e.target.value)}\n              value={amt}\n              type=\"number\"\n              placeholder=\"What's Amount?\"\n              id=\"expenseAmount\"\n            />\n            <div>\n              <FontAwesomeIcon icon={faRupeeSign}></FontAwesomeIcon>\n            </div>\n          </div>\n          <div className=\"both\">\n            <input\n              onChange={(e) => setItem(e.target.value)}\n              value={item}\n              type=\"text\"\n              placeholder=\"Which Expense?\"\n              id=\"expenseDesc\"\n            />\n            <div>\n              <FontAwesomeIcon icon={faTag}></FontAwesomeIcon>\n            </div>\n          </div>\n          <button type=\"submit\" style={{ cursor: \"pointer\" }}>\n            <FontAwesomeIcon icon={faCheck}></FontAwesomeIcon>\n          </button>\n        </form>\n      </div>\n      {itemList.map((currentItem) => {\n        return (\n          <OutputComp\n            key={currentItem.id}\n            id={currentItem.id}\n            itemName={currentItem.item}\n            itemAmt={currentItem.itemAmount}\n            date={currentItem.date}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default InputComp;\n","import \"./App.css\";\nimport InputComp from \"./Components/InputComp\";\n\nimport { firestoreRef } from \"./config\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <InputComp/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}